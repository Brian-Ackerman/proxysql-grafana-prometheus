version: '3.7'

volumes:
    prometheus_data: {}
    grafana_data: {}

networks:
  traefik-net:
    external: true
  backend:
    external: true

services:

  prometheus:
    image: prom/prometheus:v2.32.1
    volumes:
      - /swarm/cluster/data/proxysql_monitor/prometheus:/etc/prometheus/
      - /swarm/cluster/data/proxysql_monitor/prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
#      - pushgateway:pushgateway
    depends_on:
      - cadvisor
#      - pushgateway
    networks:
      - backend
    restart: always
#    deploy:
#      placement:
#        constraints:
#          - node.hostname == ${HOSTNAME}

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    networks:
      - backend
    restart: always
    deploy:
      mode: global

  alertmanager:
    image: prom/alertmanager
    ports:
      - 9093:9093
    volumes:
      - /swarm/cluster/data/proxysql_monitor/alertmanager:/etc/alertmanager/
    networks:
      - backend
    restart: always
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
#    deploy:
#      placement:
#        constraints:
#          - node.hostname == ${HOSTNAME}
  cadvisor:
    image: google/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8081:8081
    networks:
      - backend
    restart: always
    deploy:
      mode: global

  grafana:
    image: grafana/grafana
    user: "472"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    environment:
      - GF_SERVER_PROTOCOL=https
      - GF_SERVER_CERT_FILE=/etc/grafana/certs/servercertificate.crt
      - GF_SERVER_CERT_KEY=/etc/grafana/keys/private.key
    volumes:
      - /swarm/cluster/data/proxysql_monitor/grafana:/var/lib/grafana
      - /swarm/cluster/data/proxysql_monitor/grafana/provisioning/:/etc/grafana/provisioning/
      - /swarm/cluster/data/proxysql_monitor/certs:/etc/grafana/certs
      - /swarm/cluster/srv/ssl:/etc/grafana/keys
    env_file:
      - ./grafana/config.monitoring
    networks:
      - backend
      - traefik-net
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-net
        - traefik.http.services.grafana.loadbalancer.server.port=3000
        - traefik.http.routers.grafana.rule=Host(`dev-proxymonitor.steeleglobal.net`)
        - traefik.http.routers.grafana.service=grafana
        - traefik.http.routers.grafana.entrypoints=https
        - traefik.http.services.grafana-https.loadbalancer.server.port=3000
        - traefik.http.routers.grafana-https.entrypoints=https
        #traefik.http.routers.proxysql_grafanaRouter.middlewares: middlesware-secure-headers@file
        #traefik.http.routers.proxysql_grafanaRouter.service: proxysql_grafana
        - traefik.http.routers.grafana-https.rule=Host(`dev-proxymonitor.steeleglobal.net`)
        #traefik.http.services.proxysql_grafana-https.loadbalancer.passhostheader: 'true'
        #traefik.http.services.proxysql_grafana-https.loadbalancer.sticky.cookie: 'true'
        #traefik.enable: 'true'
        - traefik.http.services.grafana-https.loadbalancer.server.scheme=https
        - traefik.http.routers.grafana-https.tls=true
        - traefik.http.routers.grafana-https.service=grafana-https
      update_config:
        delay: 10s
        failure_action: rollback
      restart_policy:
        delay: 10s
        window: 120s
        max_attempts: 6

#  pushgateway:
#    image: prom/pushgateway
#    restart: always
#    expose:
#      - 9091
#    ports:
#      - "9091:9091"
#    networks:
#      - back-tier
